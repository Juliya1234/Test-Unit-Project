<question>Предполагает переход на следующий этап после полного окончания работ по предыдущему этапу
<variant>каскадная модель
<variant>поэтапная модель с промежуточным контролем
<variant>спиральная модель
<variant>математический модель
<variant>аналитический модель

<question>Итерационная модель разработки ПО с циклами обратной связи между этапами
<variant>поэтапная модель с промежуточным контролем
<variant>каскадная модель
<variant>спиральная модель
<variant>математический модель
<variant>аналитический модель

<question>Делает упор на начальные этапы ЖЦ: анализ требований, проектирование спецификаций, предварительное и детальное проектирование
<variant>спиральная модель
<variant>поэтапная модель с промежуточным контролем
<variant>каскадная модель
<variant>математический модель
<variant>аналитический модель

<question>Преимущества какой модели – накопление и повторное использование программных средств, моделей и прототипов
<variant>спиральная модель
<variant>поэтапная модель с промежуточным контролем
<variant>каскадная модель
<variant>математический модель
<variant>аналитический модель

<question>Нерешенные вопросы и ошибки, допущенные на этапах анализа и проектирования, порождают …
<variant>приводят к неуспеху всего проекта
<variant>приводят к успеху проекта
<variant>на будущее проекта не повлияет
<variant>проект повреждается, но будет продолжаться
<variant>все ответы не верны

<question>Является первой фазой разработки ПО
<variant>анализ требований
<variant>проектирование
<variant>кодирование
<variant>тестирование
<variant>эксплуатация

<question>На каком этапе дается ответ на вопрос: "Что должна делать будущая система?"
<variant>анализ требований
<variant>проектирование
<variant>кодирование
<variant>тестирование
<variant>эксплуатация

<question>Целью анализа является
<variant>все ответы верны
<variant>преобразование общих, неясных знаний о требованиях к будущей системе в точные определения
<variant>необходимые аппаратные ресурсы
<variant>требование к БД
<variant>интерфейсы и распределение функций между человеком и системой

<question>На каком этапе дается ответ на вопрос: " Как система будет удовлетворять предъявленным к ней требованиям?"
<variant>проектирование
<variant>анализ требований
<variant>кодирование
<variant>тестирование
<variant>эксплуатация

<question>Задачей этапа проектирование является (укажите лишнее)
<variant>рассматриваются вопросы, связанные с реализацией на конкретной платформе
<variant>исследование структуры системы
<variant>исследование логических взаимосвязей ее элементов
<variant>написания спецификаций физической системы
<variant>все ответы верны

<question>Что включает в себя этап проектирования?
<variant>все ответы верны
<variant>разработка структуры
<variant>согласование функций и технических требований к компонентам
<variant>производство отчетных документов
<variant>проектирование архитектуры ПО

<question>Методы структурного анализа и проектирования стремятся преодолеть сложность больших систем путем …
<variant>расчленения их на части
<variant>с помощью математической модели
<variant>методом Гаусса
<variant>методом Крамера
<variant>методом обработки информации

<question>Выгода в использовании черных ящиков заключается в том, что … 
<variant>необходимо знать лишь его входы и выходы
<variant>необходимо знать всю его структуру
<variant>достаточно маленькой памяти
<variant>достаточно не большой информаций
<variant>все ответы верны

<question>Второй важной идеей, лежащей в основе структурных методов, является идея …
<variant>иерархия
<variant>классификация
<variant>использование черных ящиков
<variant>фильтрация
<variant>математические модели

<question>…  заключается в выделении существенных с некоторых позиций аспектов системы и отвлечение от несущественных с целью представления проблемы в простом общем виде
<variant>принцип абстрагирования
<variant>принцип формализации
<variant>принцип упрятывания
<variant>принцип концептуальной общности
<variant>принцип полноты

<question>… заключается в необходимости строгого методического подхода к решению проблемы
<variant>принцип формализации
<variant>принцип упрятывания
<variant>принцип концептуальной общности
<variant>принцип полноты
<variant>принцип абстрагирования

<question>… заключается в упрятывании несущественной на конкретном этапе информации: каждая часть "знает" только необходимую ей информацию
<variant>принцип упрятывания
<variant>принцип концептуальной общности
<variant>принцип полноты
<variant>принцип абстрагирования 
<variant>принцип формализации

<question>… заключается в следовании единой философии на всех этапах ЖЦ
<variant>принцип концептуальной общности
<variant>принцип полноты
<variant>принцип абстрагирования 
<variant>принцип формализации
<variant>принцип упрятывания

<question>… заключается в контроле на присутствие лишних элементов
<variant>принцип полноты
<variant>принцип абстрагирования 
<variant>принцип формализации
<variant>принцип упрятывания 
<variant>принцип концептуальной общности

<question>…  заключается в обоснованности и согласованности элементов
<variant>принцип непротиворечивости
<variant>принцип доступа конечного пользователя
<variant>принцип структурирования данных
<variant>принцип логической независимости
<variant>принцип независимости данных

<question>… заключается в концентрации внимания на логическом проектировании для обеспечения независимости от физического проектирования
<variant>принцип логической независимости
<variant>принцип доступа конечного пользователя
<variant>принцип непротиворечивости
<variant>принцип структурирования данных
<variant>принцип независимости данных

<question>… заключается в том, что модели данных должны быть проанализированы и спроектированы независимо от процессов их логической обработки, а также от их физической структуры и распределения
<variant>принцип независимости данных
<variant>принцип доступа конечного пользователя
<variant>принцип непротиворечивости
<variant>принцип структурирования данных
<variant>принцип логической независимости

<question>… заключается в том, что данные должны быть структурированы и иерархически организованы
<variant>принцип структурирования данных
<variant>принцип доступа конечного пользователя
<variant>принцип непротиворечивости
<variant>принцип логической независимости
<variant>принцип независимости данных

<question>… заключается в том, что пользователь должен иметь средства доступа к базе данных, которые он может использовать непосредственно (без программирования)
<variant>принцип доступа конечного пользователя
<variant>принцип непротиворечивости
<variant>принцип структурирования данных 
<variant>принцип логической независимости
<variant>принцип независимости данных

<question> DFD
<variant>диаграммы потоков данных
<variant>диаграммы "сущность-связь"
<variant>диаграммы переходов состояний
<variant>диаграмма разделения
<variant>диаграмма сложения

<question>ERD
<variant>диаграммы "сущность-связь"
<variant>диаграммы переходов состояний
<variant>диаграммы потоков данных
<variant>диаграмма разделения
<variant>диаграмма сложения

<question> STD
<variant>диаграммы переходов состояний
<variant>диаграммы потоков данных
<variant>диаграммы "сущность-связь"
<variant>диаграмма разделения
<variant>диаграмма сложения

<question>Логическая DFD
<variant>все ответы верны
<variant>показывает внешние по отношению к системе источники и стоки (адресаты) данных
<variant>идентифицирует логические функции (процессы)
<variant>идентифицирует хранилища (накопители) данных, к которым осуществляется доступ
<variant>идентифицирует группы элементов данных

<question>Для чего используется потоки данных?
<variant>моделирования передачи информации
<variant>моделирования приема информации
<variant>моделирования фильтрации информации 
<variant>моделирования объединение информации
<variant>моделирования сортировки информации

<question>Контекстная диаграмма
<variant>отражает интерфейс системы с внешним миром
<variant>отражает БД системы с внешним миром
<variant>отражает модель системы с внешним миром
<variant>отражает структуру системы с внешним миром
<variant>отражает процедуру системы с внешним миром

<question>Предназначен для расщепления и объединения потоков.
<variant>групповой узел
<variant>узел-предок
<variant>неиспользуемый узел
<variant>узел изменение имени
<variant>текст

<question>Позволяет увязывать входящие и выходящие потоки между детализируемым процессом и детализирующей DFD
<variant>узел-предок
<variant>неиспользуемый узел
<variant>узел изменение имени
<variant>текст
<variant>групповой узел

<question>Применяется в ситуации, когда декомпозиция данных производится в групповом узле, при этом требуются не все элементы входящего в узел потока
<variant>неиспользуемый узел
<variant>узел изменение имени
<variant>текст
<variant>групповой узел
<variant>узел-предок

<question>Позволяет неоднозначно именовать потоки, при этом их содержимое эквивалентно
<variant>узел изменение имени
<variant>текст
<variant>групповой узел
<variant>узел-предок
<variant>неиспользуемый узел

<question>В свободном формате в любом месте диаграммы
<variant>текст
<variant>групповой узел
<variant>узел-предок
<variant>неиспользуемый узел
<variant>узел изменение имени

<question>Представляет собой интерфейс между DFD и спецификациями управления, собственно моделирующими и документирующими аспекты реального времени
<variant>управляющий процесс
<variant>управляющий поток
<variant>управляющее хранилище
<variant>управляющий стек
<variant>управляющий переход

<question>Представляет "срез" управляющего потока во времени
<variant>управляющее хранилище
<variant>управляющий поток
<variant>управляющий процесс
<variant>управляющий стек
<variant>управляющий переход

<question>Представляет собой "трубопровод", через который проходит управляющая информация
<variant>управляющий поток
<variant>управляющее хранилище
<variant>управляющий процесс
<variant>управляющий стек
<variant>управляющий переход

<question>Позволяет формально описать расщепление/ объединение потоков.
<variant>БНФ-нотация
<variant>БНФ-статья
<variant>БНФ-регистр
<variant>БНФ-память
<variant>БНФ-предложение

<question>Для чего используется спецификация процесса
<variant>описания функционирования процесса в случае отсутствия необходимости детализировать его с помощью DFD
<variant>описания функционирования процесса в случае отсутствия необходимости детализировать его с помощью STD
<variant>описания функционирования процесса в случае отсутствия необходимости детализировать его с помощью ERD
<variant>описания функционирования процесса в детализации
<variant>описания функционирования процесса в случае отсутствия необходимости форматирования

<question> В состав языка входят следующие основные символы:
<variant>все ответы верны
<variant>глаголы
<variant>таблицы
<variant>математические термины
<variant>технические термины

<question>Каждый символ FLOW-формы имеет вид
<variant>прямоугольника
<variant>треугольника
<variant>круга
<variant>ромба
<variant>цилиндра

<question>Дальнейшее развитие FLOW-формы получили в диаграммах
<variant>Насси-Шнейдермана
<variant>Шнейдермана
<variant>Джексона
<variant>Фон Неймана
<variant>Баркера

<question>Представляет независимые данные, которые всегда присутствуют в системе
<variant>независимая сущность
<variant>ассоциированная сущность
<variant>неограниченное отношение
<variant>ограниченное отношение
<variant>существенно-ограниченное отношение

<question>Представляет данные, которые ассоциируются с отношениями между двумя и более сущностями
<variant>ассоциированная сущность
<variant>неограниченное отношение
<variant>ограниченное отношение
<variant>существенно-ограниченное отношение
<variant>независимая сущность

<question>Представляет собой безусловное отношение, т.е. отношение, которое всегда существует до тех пор, пока существуют относящиеся к делу сущности
<variant>неограниченное отношение
<variant>ограниченное отношение
<variant>существенно-ограниченное отношение
<variant>независимая сущность
<variant>ассоциированная сущность

<question>Представляет собой условное отношение между сущностями
<variant>ограниченное отношение
<variant>существенно-ограниченное отношение
<variant>независимая сущность
<variant>ассоциированная сущность
<variant>неограниченное отношение

<question>Используется, когда соответствующие сущности взаимно-зависимы в системе
<variant>существенно-ограниченное отношение
<variant>независимая сущность
<variant>ассоциированная сущность
<variant>неограниченное отношение
<variant>ограниченное отношение

<question>Для идентификации требований, в соответствии с которыми сущности вовлекаются в отношения, используются
<variant>связи
<variant>значение
<variant>атрибуты
<variant>переходы
<variant>символы

<question>В нотации Баркера используется
<variant>ERD – диаграмма
<variant>ER – диаграмма
<variant>SRD – диаграмма
<variant>DDR – диаграмма
<variant>DDS – диаграмма

<question>Сколько этапов включает разработка ERD?
<variant>3
<variant>4
<variant>5
<variant>6
<variant>2

<question>Для чего служит 2-этап ERD – диаграммы?
<variant>для выявления и определения отношений между сущностями
<variant>исходной информацией служит содержимое хранилищ данных, определяемое входящими и выходящими в/из него потоками данных
<variant>разрешения неспецифических (многие ко многим) отношений
<variant>для сортировки сущностей
<variant>для сложение сущностей

<question>Для чего служит 1-этап ERD – диаграммы?
<variant>исходной информацией служит содержимое хранилищ данных, определяемое входящими и выходящими в/из него потоками данных
<variant>разрешения неспецифических (многие ко многим) отношений
<variant>для сортировки сущностей
<variant>для сложение сущностей
<variant>для выявления и определения отношений между сущностями

<question>Для чего служит 3-этап ERD – диаграммы?
<variant>разрешения неспецифических (многие ко многим) отношений
<variant>исходной информацией служит содержимое хранилищ данных, определяемое входящими и выходящими в/из него потоками данных
<variant>для сортировки сущностей
<variant>для сложение сущностей
<variant>для выявления и определения отношений между сущностями

<question>… выделение подзадачи, реализуемой некоторым модулем, в новый самостоятельный модуль
<variant>принцип факторизации
<variant>принцип единства решений
<variant>обработка ошибок
<variant>принцип отсутствия памяти
<variant>инициализация и завершение

<question>Процесс любого решения состоит из двух частей: распознавания того, какое действие выбрать, и исполнения этого действия
<variant>принцип единства решений
<variant>обработка ошибок
<variant>принцип отсутствия памяти
<variant>инициализация и завершение
<variant>принцип факторизации

<question>Сообщения об ошибках целесообразно формировать и визуализировать в модуле, который ошибку обнаруживает
<variant>обработка ошибок
<variant>принцип отсутствия памяти
<variant>инициализация и завершение
<variant>принцип факторизации
<variant>принцип единства решений

<question>Когда вызванный модуль возвращает управление вызвавшему его модулю после выполнения своей функции, этот модуль “умирает”, оставляя после себя только результат
<variant>принцип отсутствия памяти
<variant>инициализация и завершение
<variant>принцип факторизации
<variant>принцип единства решений
<variant>обработка ошибок

<question>Являются тpудными для сопpовождения из-за их плохой (временной) связности и сильного сцепления
<variant>инициализация и завершение
<variant>принцип факторизации
<variant>принцип единства решений
<variant>обработка ошибок
<variant>принцип отсутствия памяти

<question>Возникает опасность того, что человек, сопровождающий такую систему, забудет изменить один из дублей
<variant>принцип минимизации избыточности
<variant>инициализация и завершение
<variant>принцип факторизации
<variant>принцип единства решений
<variant>обработка ошибок
